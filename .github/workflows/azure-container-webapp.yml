# This workflow will build and push a Docker container to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-custom-container?tabs=dotnet&pivots=container-linux
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Create a GitHub Personal access token with "repo" and "read:packages" permissions.
#
# 4. Create three app settings on your Azure Web app:
#       DOCKER_REGISTRY_SERVER_URL: Set this to "https://ghcr.io"
#       DOCKER_REGISTRY_SERVER_USERNAME: Set this to the GitHub username or organization that owns the repository
#       DOCKER_REGISTRY_SERVER_PASSWORD: Set this to the value of your PAT token from the previous step
#
# 5. Change the value for the AZURE_WEBAPP_NAME.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy a container to an Azure Web App

env:
  DB_HOST: localhost
  DB_PORT: 3306
  DB_USER: admin
  DB_PASS: hnam23012002
  DB_DIALECT: mysql 
  DB_NAME_TEST: cafe
  DB_NAME_DEVELOPMENT: cafe
  DB_NAME_PRODUCTION: cafe
  JWTKEY: random_secret_key
  TOKEN_EXPIRATION: hour || minutes || 48h
  BEARER: Bearer || anything
  PORT: 8080 
  NODE_ENV: production
  GOOGLE_CLOUD_PROJECT_ID: nestjs-398217
  GOOGLE_CLOUD_CLIENT_EMAIL: nestjs-398217@appspot.gserviceaccount.com
  GOOGLE_CLOUD_PRIVATE_KEY: "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC3GLI5xW80Qg8O\nZ4G5LfSSuBYAYBDDKrZjO124VMb+VQN/7ABQXgFqpdMw4Y7Bl7Ri+JmF/FBBFjIT\n7aKdQdOmVIPYH3CQF3klme6vM0FFHXdPLRVAWG9VRR1iCpOLAyV2zfGvEXwbvu3s\nhIh2KL0QibyP/wrVk97+vpNWSgxuQLQepozXDmamGdWqniCTZoyduMKBYrhSzAFE\nRUNheQ4ypjCHHVCLAqRpwyUcOg4RYpmNwkSOKv6U861bubsvMrzwsI0YXa/0zWP8\nmtrqWe7/c0XuWBUZpe08d10qG0XwCFSlFh5uIDanUDISFqehVFHxLIULPPJIoh0y\nuuBJkGwZAgMBAAECggEATDaP7UM09EQw/zZvhXTPEolkwxg5sftj+u85piJHyJL7\nh3JleQ6AOXO38mdZJFUw5WeEhASQJV+HTctDPoEph9kzHjGMCbZzm4a1FyFXIF1R\nDdh+uY92HEDOJ8KuQpV3MTotSUmWZvg1Ehfis4hmlm0225t2V4ubLV+HdcoR3YwE\n3uqf8uZwUqyqEWWlZsVv3x6UgWayG4db7imv3sBuhrLdLNt5IG5IubkdKINdeKtl\n/B2fG1nZA2NYlMlQBE10WmKNeOUOvym5ICdsLTZJroUQCgOIyEf9WDA11Zxmmci1\nqsR8jY9oBbdpMLTs3IULdsr7E8F9mz38bbxaWcN6pwKBgQDy5wBo8hAwcLMmoq1Y\nJoMjyy+QmaYFrl3I3NJXZc39QfGi+y/iNgCoV0MgekPFP2yxBXKXDgW/qXaYmu1F\nEkS2n3Vsk0gstQS3m9T8/jXZMHsgcIa5mW8XIxPeKnW3FHflpi57gyHyMyIGs99g\nnM6TZf1pEvA0iUu+ERxMART2XwKBgQDA+CP53dRBya2tuw/joZ2gTogXUwMi9hkZ\nn46HvEiZMeUE/jfIgc4CDzUqQNaxNhCEI4ImOI646Mq7Z1Mg4iWFradKz5TQiCMs\nVagewLq206PzGzOqOk7Hfteag+JF0B35KVlHF35/tvqK19mUMLWfk6/OqNeKoPWc\n4NAyto2AhwKBgQDso32zv/djqbfu8NcdpM9nxKA/KGEk8b1uXSsSeBzZGTB2jm4U\n3HWBixnbfyGc/XA/eUYswT16fncKrwxumSCWJf043LeYznWdBtTV8Da3s9KQRPAL\nyt3+VW8appTt2qP/+AkazSL6GTSSARSiw8FAukDJ5+hZ1lQTBApkRT2N0wKBgAHu\nee22WrmN2z8x8CbHJ1zDbHlPS2i+LeIjxrl1GQTviutR4B0Rr441uMKDg6Kid+fa\nsyLOzh7rtZvKnPpnSRjddB87lLHBqxh2gwhLxZKu66UzUIETtFYq3t2dFFa+jo4/\n67Tad1mv6zIYlwT0t9yxDcFzzzSEB/FaDrtzOFdhAoGBAMLQ9VBRyWFZ8vfw5X1K\nlGQ49BFAWY9gwUY5Hqki75xQW+l+/ZF+650460sE3wXmOhDLHFOWFQlN0FoBUOKu\npOGgPbyQOhWmEnOUEUsHMGT1KJo5ATYUWc5hh6IsGxSzuTHMGTBuKDs96ecCT90V\nXnFri3omwdkN31qCElcDjqit\n-----END PRIVATE KEY-----\n"
  BUCKET_NAME: nestjs-398217.appspot.com
  MAIL_HOST: smtp.gmail.com
  MAIL_USER: hoangnammta2301@gmail.com
  MAIL_PASS: sxczksbzbwmtfgxg
  MAIL_FROM: ${MAIL_USER}
  MAIL_TRANSPORT: smtp://${MAIL_USER}:${MAIL_PASS}@$${MAIL_HOST}

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log in to GitHub container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          push: true
          tags: ghcr.io/${{ env.REPO }}:${{ github.sha }}
          file: ./Dockerfile

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: 'ghcr.io/${{ env.REPO }}:${{ github.sha }}'
